# -*- coding: utf-8 -*-
"""DeepSeek

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1u18m0hulV99O4yGT_GfQ3TDQxclLVGnY
"""

import openai
import json
import networkx as nx
import matplotlib.pyplot as plt

client = openai.OpenAI(
    base_url="https://api.deepseek.com/v1",
    api_key="API_KEY"
)

def perform_ner_re(text):
    system_message = {
        "role": "system",
        "content": (
            "Вы — ИИ-ассистент, выполняющий распознавание именованных сущностей (NER) и извлечение отношений (RE) на русском тексте. "
            "Для NER определите сущности, такие как персоны, организации, локации и т.д. "
            "Для RE определите отношения между этими сущностями. "
            "Верните результаты в формате JSON со следующей структурой: "
            "{ 'entities': [{'text': 'текст сущности', 'type': 'тип сущности'}, ...], "
            "'relations': [{'subject': 'субъект', 'predicate': 'тип отношения', 'object': 'объект'}, ...] }"
        )
    }
    user_message = {
        "role": "user",
        "content": f"Анализируйте следующий текст: {text}"
    }
    messages = [system_message, user_message]

    response = client.chat.completions.create(
        model="deepseek-chat",
        messages=messages,
        response_format={ "type": "json_object" }
    )

    result = response.choices[0].message.content
    return json.loads(result)

def visualize_graph(result):
    G = nx.DiGraph()

    for entity in result['entities']:
        G.add_node(entity['text'], type=entity['type'])

    for relation in result['relations']:
        G.add_edge(relation['subject'], relation['object'], label=relation['predicate'])

    type_to_color = {
        'PERSON': 'blue',
        'ORGANIZATION': 'green',
        'LOCATION': 'red',
    }
    node_colors = [type_to_color.get(G.nodes[node].get('type', 'UNKNOWN'), 'gray') for node in G.nodes]


    pos = nx.spring_layout(G, k=1.5)

    plt.figure(figsize=(30, 20))

    nx.draw_networkx_nodes(G, pos, node_color=node_colors, node_size=3000)

    nx.draw_networkx_labels(G, pos, font_size=12, font_weight='bold')

    nx.draw_networkx_edges(G, pos, connectionstyle='arc3,rad=0.1', arrows=True, arrowsize=15)

    labels = nx.get_edge_attributes(G, 'label')
    nx.draw_networkx_edge_labels(G, pos, edge_labels=labels, font_color='red', label_pos=0.3)

    plt.show()

russian_text = "Взрыв газа произошел в одной из квартир пятиэтажки на улице Луначарского в Петрозаводске, по предварительным данным, пострадали три человека, сообщили «РИА Новости» в республиканском управлении МЧС."
result = perform_ner_re(russian_text)
print(result)
visualize_graph(result)

